<!DOCTYPE HTML>
<html lang="{{ language }}" class="{{ default_theme }}" dir="{{ text_direction }}">
  <head>
    <!-- Book generated using mdBook -->
    <meta charset="UTF-8">
    <meta name="robots" content="noindex">
    <title>{{ title }}</title>

    {{#if base_url}}
    <base href="{{ base_url }}">
    {{/if}}

    <!-- Custom HTML head -->
    {{> head}}

    <meta name="description" content="{{ description }}">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="theme-color" content="#ffffff">

    <meta name="og:title" content="{{ title }}">
    <meta name="og:description" content="{{ description }}">

    {{#if favicon_svg}}
    <link rel="icon" href="{{ path_to_root }}favicon.svg">
    {{/if}}

    {{#if favicon_png}}
    <link rel="shortcut icon" href="{{ path_to_root }}favicon.png">
    {{/if}}

    <link rel="stylesheet" href="{{ path_to_root }}css/variables.css">
    <link rel="stylesheet" href="{{ path_to_root }}css/general.css">
    <link rel="stylesheet" href="{{ path_to_root }}css/chrome.css">

    {{#if print_enable}}
    <link rel="stylesheet" href="{{ path_to_root }}css/print.css" media="print">
    {{/if}}

    <!-- Fonts -->
    <link rel="stylesheet" href="{{ path_to_root }}FontAwesome/css/font-awesome.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inconsolata:wght@200..900&family=Reddit+Sans:ital,wght@0,200..900;1,200..900&display=swap" rel="stylesheet">

    {{#if copy_fonts}}
    <link rel="stylesheet" href="{{ path_to_root }}fonts/fonts.css">
    {{/if}}

    <!-- Highlight.js Stylesheets -->
    <link rel="stylesheet" href="{{ path_to_root }}highlight.css">
    <link rel="stylesheet" href="{{ path_to_root }}tomorrow-night.css">
    <link rel="stylesheet" href="{{ path_to_root }}ayu-highlight.css">

    <!-- Custom theme stylesheets -->
    {{#each additional_css}}
    <link rel="stylesheet" href="{{ ../path_to_root }}{{ this }}">
    {{/each}}
  </head>
  <body class="sidebar-visible no-js">
  <div id="body-container">
    <!-- Provide site root to javascript -->
    <script>
      var path_to_root = "{{ path_to_root }}";
      var default_theme = window.matchMedia("(prefers-color-scheme: dark)").matches ? "{{ preferred_dark_theme }}" : "{{ default_theme }}";
    </script>

    <!-- Work around some values being stored in localStorage wrapped in quotes -->
    <script>
      try {
        var theme = localStorage.getItem('mdbook-theme');
        var sidebar = localStorage.getItem('mdbook-sidebar');

        if (theme.startsWith('"') && theme.endsWith('"')) {
          localStorage.setItem('mdbook-theme', theme.slice(1, theme.length - 1));
        }

        if (sidebar.startsWith('"') && sidebar.endsWith('"')) {
          localStorage.setItem('mdbook-sidebar', sidebar.slice(1, sidebar.length - 1));
        }
      } catch (e) { }
    </script>

    <!-- Set the theme before any content is loaded, prevents flash -->
    <script>
      var theme;
      try { theme = localStorage.getItem('mdbook-theme'); } catch(e) { }
      if (theme === null || theme === undefined) { theme = default_theme; }
      var html = document.querySelector('html');
      html.classList.remove('{{ default_theme }}')
      html.classList.add(theme);
      var body = document.querySelector('body');
      body.classList.remove('no-js')
      body.classList.add('js');
    </script>

    <input type="checkbox" id="sidebar-toggle-anchor" class="hidden">

    <script>
      (function() {
        let body = document.querySelector('body');
        let sidebar = null;
        let sidebar_toggle = document.getElementById("sidebar-toggle-anchor");

        function updateSidebar() {
          sidebar = document.body.clientWidth >= 1080 ? 'visible' : 'hidden';
          sidebar_toggle.checked = sidebar === 'visible';
          body.classList.remove('sidebar-visible');
          body.classList.remove('sidebar-hidden');
          body.classList.add("sidebar-" + sidebar);
        }

        updateSidebar();
        window.addEventListener('resize', updateSidebar);
      })()
    </script>

    <nav id="sidebar" class="sidebar" aria-label="Table of contents">
      <div class="sidebar-scrollbox">
        {{#toc}}{{/toc}}
      </div>
      <div id="sidebar-resize-handle" class="sidebar-resize-handle">
        <div class="sidebar-resize-indicator"></div>
      </div>
    </nav>

    <!-- Track and set sidebar scroll position -->
    <script>
      var sidebarScrollbox = document.querySelector('#sidebar .sidebar-scrollbox');
      sidebarScrollbox.addEventListener('click', function(e) {
        if (e.target.tagName === 'A') {
          sessionStorage.setItem('sidebar-scroll', sidebarScrollbox.scrollTop);
        }
      }, { passive: true });

      var sidebarScrollTop = sessionStorage.getItem('sidebar-scroll');
      sessionStorage.removeItem('sidebar-scroll');
      if (sidebarScrollTop) {
        // preserve sidebar scroll position when navigating via links within sidebar
        sidebarScrollbox.scrollTop = sidebarScrollTop;
      } else {
        // scroll sidebar to current active section when navigating via "next/previous chapter" buttons
        var activeSection = document.querySelector('#sidebar .active');
        if (activeSection) {
          activeSection.scrollIntoView({ block: 'center' });
        }
      }
    </script>

    <div id="page-wrapper" class="page-wrapper">

      <div class="page">
        {{> header}}
        <div id="menu-bar-hover-placeholder"></div>
        <div id="menu-bar" class="menu-bar sticky">
          <div class="left-buttons">
            <label id="sidebar-toggle" class="icon-button" for="sidebar-toggle-anchor" title="Toggle Table of Contents" aria-label="Toggle Table of Contents" aria-controls="sidebar">
              <i class="fa fa-bars"></i>
            </label>
            <button id="theme-toggle" class="icon-button" type="button" title="Change theme" aria-label="Change theme" aria-haspopup="true" aria-expanded="false" aria-controls="theme-list">
              <i class="fa fa-paint-brush"></i>
            </button>
            <ul id="theme-list" class="theme-popup" aria-label="Themes" role="menu">
              <li role="none"><button role="menuitem" class="theme" id="light">Light</button></li>
              <li role="none"><button role="menuitem" class="theme" id="rust">Rust</button></li>
              <li role="none"><button role="menuitem" class="theme" id="coal">Coal</button></li>
              <li role="none"><button role="menuitem" class="theme" id="navy">Navy</button></li>
              <li role="none"><button role="menuitem" class="theme" id="ayu">Ayu</button></li>
            </ul>
          </div>

          <h1 class="menu-title">{{ book_title }}</h1>

          <div class="right-buttons">
            {{#if git_repository_url}}
            <a href="{{git_repository_url}}" title="Git repository" aria-label="Git repository">
              <i id="git-repository-button" class="fa {{git_repository_icon}}"></i>
            </a>
            {{/if}}
          </div>
        </div>

        <!-- Apply ARIA attributes after the sidebar and the sidebar toggle button are added to the DOM -->
        <script>
          document.getElementById('sidebar-toggle').setAttribute('aria-expanded', sidebar === 'visible');
          document.getElementById('sidebar').setAttribute('aria-hidden', sidebar !== 'visible');
          Array.from(document.querySelectorAll('#sidebar a')).forEach(function(link) {
            link.setAttribute('tabIndex', sidebar === 'visible' ? 0 : -1);
          });
        </script>

        <div id="content" class="content">
          <main>
            <aside class="toc">
              <b>Table of Contents</b>
              <nav class="pagetoc"></nav>
            </aside>
            <div class="content-wrap">
              {{{ content }}}
            </div>
          </main>

          <nav class="nav-wrapper" aria-label="Page navigation">
            <!-- Mobile navigation buttons -->
            {{#previous}}
              <a rel="prev" href="{{ path_to_root }}{{link}}" class="mobile-nav-chapters previous" title="Previous chapter" aria-label="Previous chapter" aria-keyshortcuts="Left">
                <i class="fa fa-angle-left"></i>
              </a>
            {{/previous}}

            {{#next}}
              <a rel="next prefetch" href="{{ path_to_root }}{{link}}" class="mobile-nav-chapters next" title="Next chapter" aria-label="Next chapter" aria-keyshortcuts="Right">
                <i class="fa fa-angle-right"></i>
              </a>
            {{/next}}

            <div style="clear: both"></div>
          </nav>
        </div>
      </div>

      <nav class="nav-wide-wrapper" aria-label="Page navigation">
        {{#previous}}
          <a rel="prev" href="{{ path_to_root }}{{link}}" class="nav-chapters previous" title="Previous chapter" aria-label="Previous chapter" aria-keyshortcuts="Left">
            <i class="fa fa-angle-left"></i>
          </a>
        {{/previous}}

        {{#next}}
          <a rel="next prefetch" href="{{ path_to_root }}{{link}}" class="nav-chapters next" title="Next chapter" aria-label="Next chapter" aria-keyshortcuts="Right">
            <i class="fa fa-angle-right"></i>
          </a>
        {{/next}}
      </nav>

    </div>

    {{#if live_reload_endpoint}}
    <!-- Livereload script (if served using the cli tool) -->
    <script>
      const wsProtocol = location.protocol === 'https:' ? 'wss:' : 'ws:';
      const wsAddress = wsProtocol + "//" + location.host + "/" + "{{{live_reload_endpoint}}}";
      const socket = new WebSocket(wsAddress);
      socket.onmessage = function (event) {
        if (event.data === "reload") {
          socket.close();
          location.reload();
        }
      };

      window.onbeforeunload = function() {
        socket.close();
      }
    </script>
    {{/if}}

    {{#if search_js}}
    <script src="{{ path_to_root }}elasticlunr.min.js"></script>
    <script src="{{ path_to_root }}mark.min.js"></script>
    <script src="{{ path_to_root }}searcher.js"></script>
    {{/if}}

    <script src="{{ path_to_root }}clipboard.min.js"></script>
    <script src="{{ path_to_root }}highlight.js"></script>
    <script src="{{ path_to_root }}book.js"></script>

    <!-- Custom JS scripts -->
    {{#each additional_js}}
    <script src="{{ ../path_to_root }}{{this}}"></script>
    {{/each}}

    {{#if is_print}}
    {{#if mathjax_support}}
    <script>
    window.addEventListener('load', function() {
      MathJax.Hub.Register.StartupHook('End', function() {
        window.setTimeout(window.print, 100);
      });
    });
    </script>
    {{else}}
    <script>
    window.addEventListener('load', function() {
      window.setTimeout(window.print, 100);
    });
    </script>
    {{/if}}
    {{/if}}

  </div>
  </body>
</html>
